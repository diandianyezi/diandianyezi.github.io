const e=JSON.parse('{"key":"v-a63617c6","path":"/article/2022-07-19-HTTP%E5%BC%BA%E7%BC%93%E5%AD%98%E4%B8%8E%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98.html","title":"HTTP 强缓存与协商缓存","lang":"zh-CN","frontmatter":{"title":"HTTP 强缓存与协商缓存","date":"2022-07-15T00:00:00.000Z","sidebar":"heading","breadcrumb":true,"lastUpdated":true,"contributors":true,"editLink":false,"tag":["HTTP","缓存"],"description":"HTTP缓存 主要作用：资源获取更快，提升用户体验，减少网络传输，缓解服务端的压力。以下是缓存运作的整体流程图： 分类 强缓存和协商缓存 强缓存 主要使用 Expires 和 Cache-Control两个头字段，两者同时存在时， Cache-Control优先级更高。当命中强缓存时，客户端不会再请求，直接从缓存中读取内容，并返回HTTP状态码200。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/2022-07-19-HTTP%E5%BC%BA%E7%BC%93%E5%AD%98%E4%B8%8E%E5%8D%8F%E5%95%86%E7%BC%93%E5%AD%98.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"HTTP 强缓存与协商缓存"}],["meta",{"property":"og:description","content":"HTTP缓存 主要作用：资源获取更快，提升用户体验，减少网络传输，缓解服务端的压力。以下是缓存运作的整体流程图： 分类 强缓存和协商缓存 强缓存 主要使用 Expires 和 Cache-Control两个头字段，两者同时存在时， Cache-Control优先级更高。当命中强缓存时，客户端不会再请求，直接从缓存中读取内容，并返回HTTP状态码200。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-28T02:52:07.000Z"}],["meta",{"property":"article:tag","content":"HTTP"}],["meta",{"property":"article:tag","content":"缓存"}],["meta",{"property":"article:published_time","content":"2022-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-28T02:52:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTP 强缓存与协商缓存\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2022-07-28T02:52:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"HTTP缓存","slug":"http缓存","link":"#http缓存","children":[]},{"level":3,"title":"分类","slug":"分类","link":"#分类","children":[]},{"level":3,"title":"强缓存","slug":"强缓存","link":"#强缓存","children":[]},{"level":3,"title":"Pragma","slug":"pragma","link":"#pragma","children":[]},{"level":3,"title":"协商缓存","slug":"协商缓存","link":"#协商缓存","children":[]}],"git":{"createdTime":1658318463000,"updatedTime":1658976727000,"contributors":[{"name":"zhangting","email":"1092923594@qq.com","commits":2},{"name":"zhangting5","email":"zhangting5@xiaomi.xom","commits":2}]},"readingTime":{"minutes":5.89,"words":1766},"filePathRelative":"article/2022-07-19-HTTP强缓存与协商缓存.md","localizedDate":"2022年7月15日","excerpt":"<h3> HTTP缓存</h3>\\n<p>主要作用：资源获取更快，提升用户体验，减少网络传输，缓解服务端的压力。以下是缓存运作的整体流程图：</p>\\n<p><img src=\\"https://raw.githubusercontent.com/diandianyezi/typora-images/master/img/image-20220728095314113.png\\" alt=\\"image-20220728095314113\\"></p>\\n<h3> 分类</h3>\\n<p>强缓存和协商缓存</p>\\n<h3> 强缓存</h3>\\n<p>主要使用 <code>Expires</code> 和 <code>Cache-Control</code>两个头字段，两者同时存在时， <code>Cache-Control</code>优先级更高。当命中强缓存时，客户端不会再请求，直接从缓存中读取内容，并返回HTTP状态码200。</p>","autoDesc":true}');export{e as data};

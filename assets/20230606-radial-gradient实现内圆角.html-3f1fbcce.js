import{_ as a,W as e,X as s,a2 as i}from"./framework-609d4fec.js";const n={},l=i(`<h1 id="css之实现内圆角" tabindex="-1"><a class="header-anchor" href="#css之实现内圆角" aria-hidden="true">#</a> CSS之实现内圆角</h1><p>最近开发需求时，需要实现一个内圆角。在网上查阅资料发现了以下实现方法，在此记录一下：</p><h2 id="radial-gradient函数" tabindex="-1"><a class="header-anchor" href="#radial-gradient函数" aria-hidden="true">#</a> radial-gradient函数</h2><p><code>radial-gradient</code> 函数用径向渐变创建图像；</p><h3 id="css语法" tabindex="-1"><a class="header-anchor" href="#css语法" aria-hidden="true">#</a> CSS语法</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">radial-gradient</span><span class="token punctuation">(</span>shape size at position<span class="token punctuation">,</span> start-color<span class="token punctuation">,</span> ...<span class="token punctuation">,</span> last-color<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>shape</code>: 确定圆的类型</p><ul><li>ellipse 默认：指定椭圆形的径向渐变</li><li>circle：指定圆形的径向渐变</li></ul></li><li><p><code>size</code>：定义渐变的大小，可能值：</p><ul><li>fathest-corner默认：指定径向渐变的半径长度为圆心到离圆心最远的角；</li><li>closest-side:指定径向渐变的半径长度为从圆心到离圆心最近的边；</li><li>closest-corner: 指定径向家变的半径长度为从圆心到离圆心最近的角；</li><li>fathest-side: 指定径向渐变的半径长度为从圆心到离圆心最远的角；</li></ul></li><li><p><code>position</code>: 定义渐变的位置。可能值：</p><ul><li><code>center</code>默认：设置中间为径向渐变圆心的纵坐标值；</li><li><code>top</code>: 设置顶部为径向渐变圆心的纵坐标值；</li><li><code>bottom</code>: 设置底部为径向渐变圆心的纵坐标值；</li></ul></li><li><p>start-color,...,last-color: 用于指定渐变的起止颜色。</p></li></ul>`,7),t=[l];function c(o,d){return e(),s("div",null,t)}const p=a(n,[["render",c],["__file","20230606-radial-gradient实现内圆角.html.vue"]]);export{p as default};

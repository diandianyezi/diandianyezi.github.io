const e=JSON.parse('{"key":"v-1bfadb49","path":"/article/2022-07-17-%E8%AE%A4%E8%AF%86requestAnimationFrame.html","title":"认识requestAnimationFrame","lang":"zh-CN","frontmatter":{"title":"认识requestAnimationFrame","date":"2022-07-17T00:00:00.000Z","sidebar":"heading","breadcrumb":true,"lastUpdated":true,"contributors":true,"editLink":false,"category":["Web API"],"tag":["requestAnimationFrame","浏览器"],"description":"认识requestAnimationFrame 告诉浏览器-你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下次重绘之前执行。 浏览器的重绘频率是每秒60次，约16ms重绘一次 可以简单的将requestAnimationFrame函数视为延迟为16ms的setTimeout函数。 参数 callback 下次重绘之前更新画帧所调用的函数（即上面所说的回调函数）。该回调函数会被传图DOMHighResTimeStamp参数，该参数与 performance.now的返回值相同，表示requestAnimationFrame（）开始执行回调函数的时刻。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/2022-07-17-%E8%AE%A4%E8%AF%86requestAnimationFrame.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"认识requestAnimationFrame"}],["meta",{"property":"og:description","content":"认识requestAnimationFrame 告诉浏览器-你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下次重绘之前执行。 浏览器的重绘频率是每秒60次，约16ms重绘一次 可以简单的将requestAnimationFrame函数视为延迟为16ms的setTimeout函数。 参数 callback 下次重绘之前更新画帧所调用的函数（即上面所说的回调函数）。该回调函数会被传图DOMHighResTimeStamp参数，该参数与 performance.now的返回值相同，表示requestAnimationFrame（）开始执行回调函数的时刻。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-28T02:52:07.000Z"}],["meta",{"property":"article:tag","content":"requestAnimationFrame"}],["meta",{"property":"article:tag","content":"浏览器"}],["meta",{"property":"article:published_time","content":"2022-07-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-28T02:52:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"认识requestAnimationFrame\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-17T00:00:00.000Z\\",\\"dateModified\\":\\"2022-07-28T02:52:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"认识requestAnimationFrame","slug":"认识requestanimationframe","link":"#认识requestanimationframe","children":[{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"返回值","slug":"返回值","link":"#返回值","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]}]}],"git":{"createdTime":1658318463000,"updatedTime":1658976727000,"contributors":[{"name":"zhangting5","email":"zhangting5@xiaomi.xom","commits":2}]},"readingTime":{"minutes":1.23,"words":369},"filePathRelative":"article/2022-07-17-认识requestAnimationFrame.md","localizedDate":"2022年7月17日","excerpt":"<h2> 认识requestAnimationFrame</h2>\\n<p>告诉浏览器-你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下次重绘之前执行。</p>\\n<p>浏览器的重绘频率是每秒60次，约16ms重绘一次</p>\\n<p>可以简单的将<code>requestAnimationFrame</code>函数视为延迟为16ms的<code>setTimeout</code>函数。</p>\\n<h3> 参数</h3>\\n<p><code>callback</code></p>\\n<p>下次重绘之前更新画帧所调用的函数（即上面所说的回调函数）。该回调函数会被传图<code>DOMHighResTimeStamp</code>参数，该参数与 <code>performance.now</code>的返回值相同，表示<code>requestAnimationFrame（）</code>开始执行回调函数的时刻。</p>","autoDesc":true}');export{e as data};

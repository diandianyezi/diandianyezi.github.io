import{_ as o,W as i,X as l,Z as e,a1 as n,$ as a,a2 as t,C as r}from"./framework-609d4fec.js";const c={},d=e("h2",{id:"概览",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概览","aria-hidden":"true"},"#"),n(" 概览")],-1),u=e("p",null,"Github Actions 是一个Github 的持续集成和持续交付的服务，可以让构建、测试和部署流程自动化。可以创建一个在每次推送分支的时候构建、测试或部署的工作流。",-1),p=e("p",null,"Github Actions 不仅仅是DevOps，还可以在其他仓库事件发生时执行工作流。",-1),h=e("h3",{id:"github-actions-是什么",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#github-actions-是什么","aria-hidden":"true"},"#"),n(" Github Actions 是什么")],-1),b=e("p",null,"持续继承由很多操作组成，如抓取代码、运行测试、编译打包等。这些操作被称为actions。",-1),m=e("p",null,[n("actions 可以共享，使用 "),e("code",null,"userName/repoName"),n("可以引用action。")],-1),v={href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/sdras/awesome-actions",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>actions/setup-node@74bc508 <span class="token comment"># 指向一个 commit</span>
actions/setup-node@v1.0    <span class="token comment"># 指向一个标签</span>
actions/setup-node@master  <span class="token comment"># 指向一个分支</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="github-actions-组成部分" tabindex="-1"><a class="header-anchor" href="#github-actions-组成部分" aria-hidden="true">#</a> Github Actions 组成部分</h3><h4 id="相关术语" tabindex="-1"><a class="header-anchor" href="#相关术语" aria-hidden="true">#</a> 相关术语</h4><ul><li>workflow 工作流：持续集成一次运行的过程，就是一个workflow。</li><li>job 任务：一个workflow由一个或多个jobs构成。</li><li>step 步骤：每个步骤由多个step组成</li><li>action 动作：每个step可以执行一个或多个命令</li></ul><p>工作流可以包含一个或者多个 可以按顺序执行或并发执行的任务 jobs。</p><p>Each job will run inside its own virtual machine <em>runner</em>, or inside a container, and has one or more <em>steps</em> that either run a script that you define or run an <em>action</em>, which is a reusable extension that can simplify your workflow.</p><p><img src="https://raw.githubusercontent.com/diandianyezi/typora-images/master/img/202207222304975.png" alt="image-20220722230450940"></p><h4 id="工作流-workflow" tabindex="-1"><a class="header-anchor" href="#工作流-workflow" aria-hidden="true">#</a> 工作流 workflow</h4>`,8),g=e("code",null,".github/workflows",-1),f={href:"https://help.github.com/en/articles/workflow-syntax-for-github-actions",target:"_blank",rel:"noopener noreferrer"},y=e("p",null,[n("项目可以有多个工作流，Github发现有 "),e("code",null,".yml"),n("文件，就会自动运行该文件。 例如，可以创建一个工作流在每次推送分支的时候 进行构建和测试，另一个工作流在生成release分支的时候自动部署。")],-1),w={href:"https://docs.github.com/en/actions/learn-github-actions/reusing-workflows",target:"_blank",rel:"noopener noreferrer"},j=e("h5",{id:"基本字段",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#基本字段","aria-hidden":"true"},"#"),n(" 基本字段：")],-1),x=t(`<li><p><code>name</code>: workflow 名称，默认为当前workflow文件名</p></li><li><p><code>on</code>: 指定触发workflow的条件，通常为某些事件，可以为代码库事件，也支持外部事件触发或定时运行。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">on</span><span class="token punctuation">:</span> push
<span class="token comment"># 也可以为数组</span>
<span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>push<span class="token punctuation">,</span> pull<span class="token punctuation">-</span>request<span class="token punctuation">]</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),A=t(`<p><code>on.&lt;event_name&gt;.types</code></p><p>触发 工作流的事件类型</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">label</span><span class="token punctuation">:</span>
    <span class="token key atrule">types</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>created<span class="token punctuation">,</span> edited<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),G=t(`<li><p><code>on.&lt;push|pull-request&gt;.&lt;tags|branches&gt;</code></p><p>指定触发事件时的分支或标签</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> master <span class="token comment"># filters</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),E=e("p",null,[e("code",null,"on.schedule")],-1),N=e("code",null,"workflow",-1),S={href:"https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07",target:"_blank",rel:"noopener noreferrer"},q=t(`<li><p><code>jobs.&lt;job_id&gt;.name</code></p><p>要执行的一项或多项任务，需要写出 <code>job_id</code>，具体名称自定义。name字段是任务的说明</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">my_first_job</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> My first job
  <span class="token key atrule">my_second_job</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> My second job
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>jobs.&lt;job_id&gt;.needs</code></p><p>指定当前任务的依赖关系即运行顺序。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">job1</span><span class="token punctuation">:</span>
  <span class="token key atrule">job2</span><span class="token punctuation">:</span>
    <span class="token key atrule">needs</span><span class="token punctuation">:</span> job1
  <span class="token key atrule">job3</span><span class="token punctuation">:</span>
    <span class="token key atrule">needs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>job1<span class="token punctuation">,</span> job2<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>jobs.&lt;job_id&gt;.runs-on</code></p><p>指定运行所需的虚拟机环境，为必填字段。可用的虚拟机如下：</p><ul><li><code>ubuntu-latest</code>，<code>ubuntu-18.04</code>或<code>ubuntu-16.04</code></li><li><code>windows-latest</code>，<code>windows-2019</code>或<code>windows-2016</code></li><li><code>macOS-latest</code>或<code>macOS-10.14</code></li></ul></li><li><p><code>jobs.&lt;job_id&gt;.steps</code></p><p>每个job的运行步骤，可以包含一个或多个步骤，每个步骤都可以指定以下三个字段。</p><ul><li><code>jobs.&lt;job_id&gt;.steps.name</code>：步骤名称</li><li><code>jobs.&lt;job_id&gt;.steps.run</code>：该步骤运行的命令或者action</li><li><code>jobs.&lt;job_id&gt;.steps.env</code>：该步骤所需的环境变量</li></ul></li>`,4),O=e("h4",{id:"events",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#events","aria-hidden":"true"},"#"),n(" Events")],-1),H={href:"https://docs.github.com/en/rest/reference/repos#create-a-repository-dispatch-event",target:"_blank",rel:"noopener noreferrer"},I={href:"https://docs.github.com/en/actions/reference/events-that-trigger-workflows",target:"_blank",rel:"noopener noreferrer"},L=e("h4",{id:"jobs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#jobs","aria-hidden":"true"},"#"),n(" Jobs")],-1),M=e("p",null,[n("A job is a set of "),e("em",null,"steps"),n(" in a workflow that execute on the same runner.")],-1),T=e("p",null,"每一步 是一个shell脚本或者是一个需要运行的action。",-1),V={href:"https://docs.github.com/en/actions/using-jobs",target:"_blank",rel:"noopener noreferrer"},B=t(`<h4 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h4><p>An <em>action</em> is a custom application for the GitHub Actions platform that performs a complex but frequently repeated task.</p><h4 id="runners" tabindex="-1"><a class="header-anchor" href="#runners" aria-hidden="true">#</a> Runners</h4><p>A runner is a server that runs your workflows when they&#39;re triggered.Each runner can run a single job at a time.</p><p>GitHub provides Ubuntu Linux, Microsoft Windows, and macOS runners to run your workflows;</p><h4 id="创建一个工作流" tabindex="-1"><a class="header-anchor" href="#创建一个工作流" aria-hidden="true">#</a> 创建一个工作流</h4><ul><li><p>创建 <code>.github/workflow/</code> 文件夹</p></li><li><p>创建 <code>learn-github-actions.yml</code>文件，并添加以下内容</p><div class="language-yacas line-numbers-mode" data-ext="yacas"><pre class="language-yacas"><code>// 可选，工作流名称
name: learn-github-actions
// 指定工作流的触发器，This is triggered by a push to every branch; for examples of syntax that runs only on pushes to specific branches, paths, or tags, 
on: [push]
jobs:
  check-bats-version: // 定义的job名
    runs-on: ubuntu-latest // 在ubuntu最新版本的运行器上直接执行
    steps: // 这个job下的所有步骤，Each item nested under this section is a separate action or shell script.
			- uses: actions/checkout@v3
			- uses: actions/setup-node@v3
				with:
					node-version: &#39;14&#39;
      - run: npm install -g bats
			- run: bats -v

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>提交这些修改并推送到远程仓库</p></li></ul>`,7),R={href:"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore",target:"_blank",rel:"noopener noreferrer"},W={href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions",target:"_blank",rel:"noopener noreferrer"};function C(P,U){const s=r("ExternalLinkIcon");return i(),l("div",null,[d,u,p,h,b,m,e("p",null,[n("GitHub 做了一个"),e("a",v,[n("官方市场"),a(s)]),n("，可以搜索到他人提交的 actions。另外，还有一个 "),e("a",k,[n("awesome actions"),a(s)]),n(" 的仓库，也可以找到不少 action。")]),_,e("p",null,[n("定义在项目中的 "),g,n("文件下的 YAML文件，可以被事件触发或者可以手动触发，也可以是定时的。workflow 文件的配置字段非常多，详见"),e("a",f,[n("官方文档"),a(s)]),n("。")]),y,e("p",null,[n('可以在一个工作流中引用另外一个工作流。see "'),e("a",w,[n("Reusing workflows"),a(s)]),n('."')]),j,e("ol",null,[x,e("li",null,[A,e("ul",null,[G,e("li",null,[E,e("p",null,[n("定时执行 "),N,n("，事件设置采用"),e("a",S,[n("POSIX cron syntax"),a(s)]),n(". The shortest interval you can run scheduled workflows is once every 5 minutes.")])])])]),q]),O,e("p",null,[n("可以触发工作流运行的具体活动。You can also trigger a workflow run on a schedule, by "),e("a",H,[n("posting to a REST API"),a(s)]),n(", or manually.")]),e("p",null,[n("Events列表： "),e("a",I,[n("Events that trigger workflows"),a(s)]),n(".")]),L,M,T,e("p",null,[n('For more information about jobs, see "'),e("a",V,[n("Using jobs"),a(s)]),n('."')]),B,e("p",null,[n('see "'),e("a",R,[n("Workflow syntax for GitHub Actions"),a(s)]),n('."')]),e("p",null,[e("a",W,[n("参考文章 github Actions"),a(s)])])])}const Y=o(c,[["render",C],["__file","2022-08-01-Github Actions.html.vue"]]);export{Y as default};

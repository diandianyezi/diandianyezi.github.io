const e=JSON.parse('{"key":"v-490a4f04","path":"/article/2022-05-06-5%E4%B8%AAjs%E7%89%B9%E6%80%A7.html","title":"5个JS特性","lang":"zh-CN","frontmatter":{"title":"5个JS特性","date":"2022-05-06T00:00:00.000Z","sidebar":"heading","breadcrumb":true,"lastUpdated":true,"contributors":true,"editLink":false,"category":["JavaScript"],"tag":["基础"],"description":"使用 Object.hasOwn 替代 in 操作符 检测对象上是否存在某个属性，一般会使用in操作符或obj.hasOwnProperty，但有各自的缺陷 in 如果指定的属性位于对象或者原型链中，会返回`true` ```js const Person = function (age) { this.age = age } Person.prototype.name = \'fatfish\' const p1 = new Person(24) console.log(\'age\' in p1) // true console.log(\'name\' in p1) // true 注意这里 ```","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/2022-05-06-5%E4%B8%AAjs%E7%89%B9%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"5个JS特性"}],["meta",{"property":"og:description","content":"使用 Object.hasOwn 替代 in 操作符 检测对象上是否存在某个属性，一般会使用in操作符或obj.hasOwnProperty，但有各自的缺陷 in 如果指定的属性位于对象或者原型链中，会返回`true` ```js const Person = function (age) { this.age = age } Person.prototype.name = \'fatfish\' const p1 = new Person(24) console.log(\'age\' in p1) // true console.log(\'name\' in p1) // true 注意这里 ```"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-28T02:52:07.000Z"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:published_time","content":"2022-05-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-28T02:52:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5个JS特性\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-06T00:00:00.000Z\\",\\"dateModified\\":\\"2022-07-28T02:52:07.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1658318463000,"updatedTime":1658976727000,"contributors":[{"name":"zhangting5","email":"zhangting5@xiaomi.xom","commits":2}]},"readingTime":{"minutes":1.46,"words":437},"filePathRelative":"article/2022-05-06-5个js特性.md","localizedDate":"2022年5月6日","excerpt":"<ol>\\n<li>\\n<p>使用 <code>Object.hasOwn</code> 替代 <code>in</code> 操作符</p>\\n<p>检测对象上是否存在某个属性，一般会使用<code>in</code>操作符或<code>obj.hasOwnProperty</code>，但有各自的缺陷</p>\\n</li>\\n</ol>\\n<h4> in</h4>\\n<pre><code>如果指定的属性位于对象或者原型链中，会返回`true`\\n\\n```js\\nconst Person = function (age) {\\n  this.age = age\\n}\\nPerson.prototype.name = \'fatfish\'\\n\\nconst p1 = new Person(24)\\nconsole.log(\'age\' in p1) // true \\nconsole.log(\'name\' in p1) // true  注意这里\\n```\\n</code></pre>","autoDesc":true}');export{e as data};

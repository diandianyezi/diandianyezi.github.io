import{_ as a,W as n,X as e,a2 as s}from"./framework-609d4fec.js";const t={},p=s(`<h3 id="position-sticky" tabindex="-1"><a class="header-anchor" href="#position-sticky" aria-hidden="true">#</a> position：sticky</h3><p>使用场景：置顶</p><p>注意： 兼容性</p><h3 id="empty选择器" tabindex="-1"><a class="header-anchor" href="#empty选择器" aria-hidden="true">#</a> :empty选择器</h3><p>使用场景：容器为空时，通过该伪元素添加提示</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span>container <span class="token punctuation">{</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> 400px<span class="token punctuation">;</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> 600px<span class="token punctuation">;</span>
    background<span class="token operator">-</span>color<span class="token operator">:</span> antiquewhite<span class="token punctuation">;</span>
    <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span>
    justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span>
    align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span>container<span class="token operator">:</span>empty<span class="token operator">:</span><span class="token operator">:</span>after <span class="token punctuation">{</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;暂无数据&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gap" tabindex="-1"><a class="header-anchor" href="#gap" aria-hidden="true">#</a> gap</h3><p>场景：将100px 3等分，且每个元素隔开10px</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">display</span><span class="token operator">:</span> flex <span class="token operator">|</span> grid；
<span class="token literal-property property">gap</span><span class="token operator">:</span> 20px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="background-clip-text" tabindex="-1"><a class="header-anchor" href="#background-clip-text" aria-hidden="true">#</a> background-clip:text</h3><p>带背景的文字效果</p><h3 id="user-select" tabindex="-1"><a class="header-anchor" href="#user-select" aria-hidden="true">#</a> user-select</h3><p>禁用光标选中</p><h3 id="invalid伪类" tabindex="-1"><a class="header-anchor" href="#invalid伪类" aria-hidden="true">#</a> :invalid伪类</h3><p>表示任意内容未通过验证的<code>input</code>或其他<code>form</code>元素</p><h3 id="focus-within伪类" tabindex="-1"><a class="header-anchor" href="#focus-within伪类" aria-hidden="true">#</a> :focus-within伪类</h3><p>表示一个元素获得焦点，或该元素的后代元素获得焦点。</p><h3 id="mix-blend-mode-difference" tabindex="-1"><a class="header-anchor" href="#mix-blend-mode-difference" aria-hidden="true">#</a> mix-blend-mode:difference</h3><p>属性描述了元素的内容应该与元素的直系父元素的内容和元素的背景如何混合。其中，<code>difference</code> 表示差值。</p>`,19),i=[p];function r(o,c){return n(),e("div",null,i)}const d=a(t,[["render",r],["__file","惊艳一时的CSS.html.vue"]]);export{d as default};

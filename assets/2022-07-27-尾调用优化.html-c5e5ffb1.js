const e=JSON.parse('{"key":"v-022bd92b","path":"/article/2022-07-27-%E5%B0%BE%E8%B0%83%E7%94%A8%E4%BC%98%E5%8C%96.html","title":"尾调用优化","lang":"zh-CN","frontmatter":{"title":"尾调用优化","date":"2022-07-27T00:00:00.000Z","sidebar":"heading","breadcrumb":true,"lastUpdated":true,"contributors":true,"editLink":false,"category":"ES6+","tag":["函数"],"description":"尾调用优化 ES6新增的一项内存管理优化机制，让JS引擎在满足条件时可以重用栈帧。而这项优化非常适合尾调用， 什么是尾调用 Tail Call 在函数的执行过程中，如果最后一个动作是一个函数的调用，即这个调用的返回值被当前函数直接返回，则称为尾调用。 function fn(x) { return gn(x) }","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/2022-07-27-%E5%B0%BE%E8%B0%83%E7%94%A8%E4%BC%98%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"尾调用优化"}],["meta",{"property":"og:description","content":"尾调用优化 ES6新增的一项内存管理优化机制，让JS引擎在满足条件时可以重用栈帧。而这项优化非常适合尾调用， 什么是尾调用 Tail Call 在函数的执行过程中，如果最后一个动作是一个函数的调用，即这个调用的返回值被当前函数直接返回，则称为尾调用。 function fn(x) { return gn(x) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-28T02:52:07.000Z"}],["meta",{"property":"article:tag","content":"函数"}],["meta",{"property":"article:published_time","content":"2022-07-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-28T02:52:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"尾调用优化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-27T00:00:00.000Z\\",\\"dateModified\\":\\"2022-07-28T02:52:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"什么是尾调用 Tail Call","slug":"什么是尾调用-tail-call","link":"#什么是尾调用-tail-call","children":[{"level":3,"title":"尾调用优化条件：","slug":"尾调用优化条件","link":"#尾调用优化条件","children":[]},{"level":3,"title":"尾调用优化实例","slug":"尾调用优化实例","link":"#尾调用优化实例","children":[]},{"level":3,"title":"尾递归","slug":"尾递归","link":"#尾递归","children":[]}]}],"git":{"createdTime":1658913989000,"updatedTime":1658976727000,"contributors":[{"name":"zhangting5","email":"zhangting5@xiaomi.xom","commits":2}]},"readingTime":{"minutes":2.22,"words":666},"filePathRelative":"article/2022-07-27-尾调用优化.md","localizedDate":"2022年7月27日","excerpt":"<h1> 尾调用优化</h1>\\n<p>ES6新增的一项内存管理优化机制，让JS引擎在满足条件时可以重用栈帧。而这项优化非常适合尾调用，</p>\\n<h2> 什么是尾调用 Tail Call</h2>\\n<p>在函数的执行过程中，如果最后一个动作是一个函数的调用，即这个调用的返回值被当前函数直接返回，则称为尾调用。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">x</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">gn</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};

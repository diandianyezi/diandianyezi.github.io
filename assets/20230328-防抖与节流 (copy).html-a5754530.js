const e=JSON.parse('{"key":"v-5c7990f5","path":"/article/20230328-%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81%20(copy).html","title":"防抖与节流","lang":"zh-CN","frontmatter":{"description":"防抖与节流 参考：https://github.com/febobo/web-interview/issues/83 内部原理 本质上是优化高频率执行代码的一种手段。 防抖： n秒后再执行该事件。若在n秒内被重复触发，则重新计时。 防止数据抖动，将多次触发转为一次触发，去除之前多余的操作，优化性能，可以用setTimeout计时器来实现。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/20230328-%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81%20(copy).html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"防抖与节流"}],["meta",{"property":"og:description","content":"防抖与节流 参考：https://github.com/febobo/web-interview/issues/83 内部原理 本质上是优化高频率执行代码的一种手段。 防抖： n秒后再执行该事件。若在n秒内被重复触发，则重新计时。 防止数据抖动，将多次触发转为一次触发，去除之前多余的操作，优化性能，可以用setTimeout计时器来实现。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-30T01:53:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-30T01:53:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"防抖与节流\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-30T01:53:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"内部原理","slug":"内部原理","link":"#内部原理","children":[{"level":3,"title":"防抖：","slug":"防抖","link":"#防抖","children":[]},{"level":3,"title":"节流：","slug":"节流","link":"#节流","children":[]}]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[{"level":3,"title":"防抖","slug":"防抖-1","link":"#防抖-1","children":[]},{"level":3,"title":"节流","slug":"节流-1","link":"#节流-1","children":[]}]},{"level":2,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":2,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]}],"git":{"createdTime":1680141216000,"updatedTime":1680141216000,"contributors":[{"name":"diandian","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":2.11,"words":634},"filePathRelative":"article/20230328-防抖与节流 (copy).md","localizedDate":"2023年3月30日","excerpt":"<h1> 防抖与节流</h1>\\n<p>参考：https://github.com/febobo/web-interview/issues/83</p>\\n<h2> 内部原理</h2>\\n<p>本质上是优化高频率执行代码的一种手段。</p>\\n<h3> <u><strong>防抖：</strong></u></h3>\\n<p><strong>n秒后再执行该事件</strong>。若在n秒内被重复触发，则重新计时。</p>\\n<p><strong>防止数据抖动</strong>，将多次触发转为一次触发，去除之前多余的操作，优化性能，可以用<code>setTimeout</code>计时器来实现。</p>\\n","autoDesc":true}');export{e as data};

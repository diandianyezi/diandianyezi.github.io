const e=JSON.parse('{"key":"v-bd9311a8","path":"/article/%E6%A0%91.html","title":"树","lang":"zh-CN","frontmatter":{"title":"树","date":"2023-01-17T00:00:00.000Z","sidebar":"heading","breadcrumb":true,"lastUpdated":true,"contributors":true,"editLink":false,"category":"数据结构","tag":["树"],"description":"树 树的定义 树是n(n &gt;= 0)个结点的有限集。 空树：结点数为0的树。 在任意一棵非空树中：有且仅有一个特定的成为根（Root）的结点；当n &gt; 1时，其余节点可分为m(m &gt; 0)个互不相交的有限集T~1~、T~2~、T~3~....T~m~，其中每一个集合本身又是一棵树，并且成为根的子树。 结点分类 树的结点包含一个数据元素及若干指向子树的分支。 结点拥有的子树数成为结点的度。 度为0的树成为叶子结点或终端节点。 度不为0的结点成为非终端结点或分支结点。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/%E6%A0%91.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"树"}],["meta",{"property":"og:description","content":"树 树的定义 树是n(n &gt;= 0)个结点的有限集。 空树：结点数为0的树。 在任意一棵非空树中：有且仅有一个特定的成为根（Root）的结点；当n &gt; 1时，其余节点可分为m(m &gt; 0)个互不相交的有限集T~1~、T~2~、T~3~....T~m~，其中每一个集合本身又是一棵树，并且成为根的子树。 结点分类 树的结点包含一个数据元素及若干指向子树的分支。 结点拥有的子树数成为结点的度。 度为0的树成为叶子结点或终端节点。 度不为0的结点成为非终端结点或分支结点。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T13:30:52.000Z"}],["meta",{"property":"article:tag","content":"树"}],["meta",{"property":"article:published_time","content":"2023-01-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T13:30:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"树\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T13:30:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"树的定义","slug":"树的定义","link":"#树的定义","children":[{"level":3,"title":"结点分类","slug":"结点分类","link":"#结点分类","children":[]},{"level":3,"title":"结点间关系","slug":"结点间关系","link":"#结点间关系","children":[]}]},{"level":2,"title":"树抽象数据类型","slug":"树抽象数据类型","link":"#树抽象数据类型","children":[{"level":3,"title":"树的存储结构","slug":"树的存储结构","link":"#树的存储结构","children":[]}]},{"level":2,"title":"二叉树","slug":"二叉树","link":"#二叉树","children":[{"level":3,"title":"特殊二叉树","slug":"特殊二叉树","link":"#特殊二叉树","children":[]},{"level":3,"title":"二叉树的性质","slug":"二叉树的性质","link":"#二叉树的性质","children":[]},{"level":3,"title":"二叉树存储结构","slug":"二叉树存储结构","link":"#二叉树存储结构","children":[]},{"level":3,"title":"二叉树遍历","slug":"二叉树遍历","link":"#二叉树遍历","children":[]},{"level":3,"title":"二叉树的建立","slug":"二叉树的建立","link":"#二叉树的建立","children":[]}]}],"git":{"createdTime":1678887052000,"updatedTime":1678887052000,"contributors":[{"name":"zhangting","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":4.96,"words":1487},"filePathRelative":"article/树.md","localizedDate":"2023年1月17日","excerpt":"<h1> 树</h1>\\n<h2> 树的定义</h2>\\n<p>树是n(n &gt;= 0)个结点的有限集。</p>\\n<p>空树：结点数为0的树。</p>\\n<p>在任意一棵非空树中：有且仅有一个特定的成为根（Root）的结点；当n &gt; 1时，其余节点可分为m(m &gt; 0)个互不相交的有限集T~1~、T~2~、T~3~....T~m~，其中每一个集合本身又是一棵树，并且成为根的子树。</p>\\n<h3> 结点分类</h3>\\n<p>树的结点包含一个数据元素及若干指向子树的分支。</p>\\n<p>结点拥有的子树数成为结点的度。</p>\\n<p>度为0的树成为叶子结点或终端节点。</p>\\n<p>度不为0的结点成为非终端结点或分支结点。</p>","autoDesc":true}');export{e as data};

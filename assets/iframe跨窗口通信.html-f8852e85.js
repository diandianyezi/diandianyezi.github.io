import{_ as l,W as o,X as p,Z as a,$ as e,a1 as n,a2 as t,C as c}from"./framework-609d4fec.js";const r={},i=t(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><h1 id="跨窗口通信" tabindex="-1"><a class="header-anchor" href="#跨窗口通信" aria-hidden="true">#</a> 跨窗口通信</h1><h2 id="同源" tabindex="-1"><a class="header-anchor" href="#同源" aria-hidden="true">#</a> 同源</h2><blockquote><p>同源策略会限制窗口和frame之间的通信。</p><p>同源策略目的是保护用户信息免遭信息盗窃。</p></blockquote><p>同源指的是 两个url具有相同的协议、域和端口。</p><p>同源策略规定：</p><ul><li>如果我们有对另一个窗口的引用(window.open || iframe)，并且该窗口是同源的，那么我们就具有对该窗口的全部访问权限；</li><li>如果不是同源的，我们就不能访问窗口中的内容：变量、文档等任何东西。唯一例外的是location：我们可以修改它，使用它进行重定向。但是无法读取location。</li></ul><h2 id="iframe" tabindex="-1"><a class="header-anchor" href="#iframe" aria-hidden="true">#</a> iframe</h2><p>允许将其他Web文档嵌入到当前文档中。很适合将第三方内容嵌入到你的网站。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://developer.mozilla.org/zh-CN/docs/Glossary<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">allowfullscreen</span> <span class="token attr-name">sandbox</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://developer.mozilla.org/zh-CN/docs/Glossary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Fallback link for browsers that don&#39;t support iframes
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基本要素：</p>`,11),u=a("li",null,[a("p",null,[a("code",null,"allowfullscreen"),n(" :如果设置，iframe则可以通过全屏Api设置(iframe的requestFullscreen())为全屏模式；")]),a("blockquote",null,[a("p",null,[a("strong",null,"备注："),n(" 这是一个遗留属性，已经被重新定义为 "),a("code",null,'allow="fullscreen"')])])],-1),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe#attr-allowpaymentrequest",target:"_blank",rel:"noopener noreferrer"},h=a("strong",null,[a("code",null,"allowpaymentrequest")],-1),k=a("code",null,"true",-1),m=a("code",null,"<iframe>",-1),_={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Payment_Request_API",target:"_blank",rel:"noopener noreferrer"},f=a("blockquote",null,[a("p",null,[a("strong",null,"备注："),n(" 这是一个历史遗留属性，已经被重新定义为 "),a("code",null,'allow="payment"'),n(".")])],-1),b=a("li",null,[a("p",null,[a("code",null,"border:none"),n(": 不展示边框；")])],-1),g=a("li",null,[a("p",null,[a("code",null,"src"),n("：嵌入文档的URL路径；")])],-1),v=a("li",null,[a("p",null,[a("code",null,"width"),n(" 和 "),a("code",null,"height"),n("：iframe的宽度和高度；")])],-1),q=t('<p>备选字段：</p><ul><li><code>sandbox</code>：需要在已经支持其他iframe功能但稍微更现代的浏览器上才能工作，该属性可以提高安全性设置。</li></ul><blockquote><p>为了提高速度，在主内容完成加载后，使用js设置src属性。使主页面更快可用并且降低加载时间，更利于SEO</p></blockquote><p>每个嵌入的浏览器上下文都有自己的 会话历史和文档，嵌入其他页面的浏览器上下文被称为 父级浏览器上下文，顶级的浏览器上下文-没有父级浏览器上下文，通常是浏览器窗口，表示为Window对象。</p><h3 id="安全隐患" tabindex="-1"><a class="header-anchor" href="#安全隐患" aria-hidden="true">#</a> 安全隐患</h3><blockquote><p>单击劫持：是一种常见的iframe攻击，将隐藏的iframe嵌入到你的文档中（或将你的文档嵌入到他们自己的恶意网站），并使用它来捕获用户的交互。这是误导用户或窃取敏感数据的常见方式。</p></blockquote><p><code>X-Frame-Options</code>：HTTP响应头 是否允许浏览器在iframe frame embed 或 object里渲染页面。网站用此方法可以防止 单击劫持 攻击。</p><h4 id="只在必要时嵌入" tabindex="-1"><a class="header-anchor" href="#只在必要时嵌入" aria-hidden="true">#</a> 只在必要时嵌入</h4><h4 id="使用https" tabindex="-1"><a class="header-anchor" href="#使用https" aria-hidden="true">#</a> 使用HTTPS</h4><h4 id="始终使用sandbox属性" tabindex="-1"><a class="header-anchor" href="#始终使用sandbox属性" aria-hidden="true">#</a> 始终使用sandbox属性</h4><h4 id="配置-csp指令" tabindex="-1"><a class="header-anchor" href="#配置-csp指令" aria-hidden="true">#</a> 配置 CSP指令</h4>',11);function x(w,z){const s=c("ExternalLinkIcon");return o(),p("div",null,[i,a("ul",null,[u,a("li",null,[a("p",null,[a("a",d,[h,e(s)])]),a("p",null,[n("设置为"),k,n("时，跨域的 "),m,n(" 就可以调用 "),a("a",_,[n("Payment Request API"),e(s)]),n("。")]),f]),b,g,v]),q])}const P=l(r,[["render",x],["__file","iframe跨窗口通信.html.vue"]]);export{P as default};

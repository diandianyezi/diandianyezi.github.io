import{_ as r,W as i,X as o,Z as e,a1 as a,$ as n,a2 as d,C as h}from"./framework-609d4fec.js";const c={},l=e("h1",{id:"http",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#http","aria-hidden":"true"},"#"),a(" HTTP")],-1),s={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP",target:"_blank",rel:"noopener noreferrer"},T=d('<h2 id="https" tabindex="-1"><a class="header-anchor" href="#https" aria-hidden="true">#</a> HTTPS</h2><p><strong>HTTPS 是一个在计算机世界里专门在两点之间安全的传输文字、图片、音频、视频等超文本数据的约定和规范</strong>。 HTTPS 是 HTTP 协议的一种扩展，它本身并不保传输的证安全性，那么谁来保证安全性呢？</p><p><strong>在 HTTPS 中，使用<code>传输层安全性(TLS)</code>或<code>安全套接字层(SSL)</code>对通信协议进行加密。也就是 HTTP + SSL(TLS) = HTTPS。</strong></p><h3 id="https做了什么" tabindex="-1"><a class="header-anchor" href="#https做了什么" aria-hidden="true">#</a> Https做了什么</h3><p>该协议提供了三个关键的指标：</p><ul><li>加密：通过数据加密来使其免受窃听者对数据的监听，</li><li>数据一致性：数据在传输的过程中不会被窃听者所修改，用户发送的数据会完整的传输到服务端</li><li>身份认证：是指确认对方的真实身份，证明你是你，防止中间人攻击并建立用户信任。</li></ul><p>端口号443，应答模式、报文结构、请求方法、uri、投资端、连接管理等等都完全沿用HTTP。</p><p>除了协议名称和端口号外，其他在语法、语义上和HTTP一样，HTTPS如何做到HTTP所不能做到的安全性呢？关键在于这个S，指的是SSL/TLS</p><h3 id="加密" tabindex="-1"><a class="header-anchor" href="#加密" aria-hidden="true">#</a> 加密</h3><p>采用非对称加密对 对称加密的密钥进行加密。</p><h3 id="数字证书" tabindex="-1"><a class="header-anchor" href="#数字证书" aria-hidden="true">#</a> 数字证书</h3><p>知名机构（CA，certification Authority）把我的公钥 证明是我的公钥，接收方拿到公钥后去致命机构那边对比一下就知道了。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><ol><li><code>HTTPS</code>建立请求前，先发数字证书 <ul><li>身份验证，拿到正确的公钥，是请求的正确的服务器</li><li>完整性验证，确保公钥没有被篡改</li></ul></li><li>非对称加密RSA。拿到服务器公钥后，浏览器用这个公钥加密出对称密钥发送给服务器，服务器用私钥解密，中间人没有私钥获取不到信息</li><li>通信双方使用对称密钥加密信息传送，速度比 <code>RSA</code> 要快，中间人不知道对称密钥无法解密信息</li></ol>',14);function p(_,S){const t=h("ExternalLinkIcon");return i(),o("div",null,[l,e("p",null,[e("a",s,[a("MDN介绍"),n(t)])]),T])}const H=r(c,[["render",p],["__file","2022-04-02-HTTP介绍.html.vue"]]);export{H as default};

const e=JSON.parse('{"key":"v-17716fb7","path":"/article/20230512-vue3%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%BB%84%E5%90%88%E5%BC%8Fapi.html","title":"vue3学习之组合式api","lang":"zh-CN","frontmatter":{"title":"vue3学习之组合式api","date":"2023-05-12T00:00:00.000Z","category":"Vue","tag":["Vue"],"description":"Vue3 - 组合式api 单文件组件：*.vue 文件格式 组合式API 选项的分离掩盖了潜在的逻辑问题。所以有了组合式api 组合式API是一系列API的集合，使我们可以直接使用函数而不是声明选项的方式开发组件。 是一个概括性术语，涵盖以下方面的API: 响应式API：例如 ref() 和 reactive()，使我们可以直接创建响应式状态、计算属性和侦听器。 生命周期钩子：例如 onMounted 和 onUnMounted ，可以直接在组件各生命周期阶段添加逻辑。 依赖注入：provide 和 inject","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/20230512-vue3%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%BB%84%E5%90%88%E5%BC%8Fapi.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"vue3学习之组合式api"}],["meta",{"property":"og:description","content":"Vue3 - 组合式api 单文件组件：*.vue 文件格式 组合式API 选项的分离掩盖了潜在的逻辑问题。所以有了组合式api 组合式API是一系列API的集合，使我们可以直接使用函数而不是声明选项的方式开发组件。 是一个概括性术语，涵盖以下方面的API: 响应式API：例如 ref() 和 reactive()，使我们可以直接创建响应式状态、计算属性和侦听器。 生命周期钩子：例如 onMounted 和 onUnMounted ，可以直接在组件各生命周期阶段添加逻辑。 依赖注入：provide 和 inject"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-26T15:36:43.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2023-05-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-26T15:36:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3学习之组合式api\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-26T15:36:43.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"组合式API","slug":"组合式api","link":"#组合式api","children":[{"level":3,"title":"组合式API与选项式API","slug":"组合式api与选项式api","link":"#组合式api与选项式api","children":[]},{"level":3,"title":"基础","slug":"基础","link":"#基础","children":[]}]}],"git":{"createdTime":1685115403000,"updatedTime":1685115403000,"contributors":[{"name":"zhangting","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":3.52,"words":1057},"filePathRelative":"article/20230512-vue3学习之组合式api.md","localizedDate":"2023年5月12日","excerpt":"<h1> Vue3 - 组合式api</h1>\\n<p>单文件组件：*.vue 文件格式</p>\\n<h2> 组合式API</h2>\\n<p><strong>选项的分离掩盖了潜在的逻辑问题</strong>。所以有了<strong>组合式api</strong></p>\\n<p>组合式API是一系列API的集合，使我们可以直接使用函数而不是声明选项的方式开发组件。</p>\\n<p>是一个概括性术语，涵盖以下方面的API:</p>\\n<ul>\\n<li>响应式API：例如 <code>ref()</code> 和 <code>reactive()</code>，使我们可以直接创建响应式状态、计算属性和侦听器。</li>\\n<li>生命周期钩子：例如 <code>onMounted </code> 和 <code>onUnMounted</code> ，可以直接在组件各生命周期阶段添加逻辑。</li>\\n<li>依赖注入：<code>provide</code> 和 <code>inject</code></li>\\n</ul>","autoDesc":true}');export{e as data};

import{_ as a,W as s,X as n,a2 as e}from"./framework-609d4fec.js";const i={},t=e(`<h1 id="css性能优化" tabindex="-1"><a class="header-anchor" href="#css性能优化" aria-hidden="true">#</a> CSS性能优化</h1><p>网站性能很大程度上会影响一个用户的留存。</p><h3 id="_1-精简样式文件" tabindex="-1"><a class="header-anchor" href="#_1-精简样式文件" aria-hidden="true">#</a> 1. 精简样式文件</h3><p>根据项目规模情况来决定，是合并成不同的样式文件，还是合并为一个文件。</p><h3 id="_2-利用继承减少代码量" tabindex="-1"><a class="header-anchor" href="#_2-利用继承减少代码量" aria-hidden="true">#</a> 2.利用继承减少代码量</h3><p>有些CSS属性是可以继承的，比如color、font-size、font-family等，利用好继承，可以减少编写重复代码，从而使得CSS文件变得比较大，影响加载速度。</p><h3 id="_3-内联首屏关键css" tabindex="-1"><a class="header-anchor" href="#_3-内联首屏关键css" aria-hidden="true">#</a> 3.内联首屏关键CSS</h3><h3 id="_4-异步加载css" tabindex="-1"><a class="header-anchor" href="#_4-异步加载css" aria-hidden="true">#</a> 4.异步加载CSS</h3><p>CSS会阻塞渲染，在CSS文件请求、下载、解析完成之前，浏览器不会渲染任何已处理的内容。</p><p>但是有些CSS文件可能不是我们渲染必须的CSS文件，可以让它们一步加载。</p><p>1.使用JS动态创建样式表link标签，并插入到DOM中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> myCss <span class="token operator">=</span> ducument<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;link&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myCss<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">&#39;stylesheet&#39;</span><span class="token punctuation">;</span>
myCss<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;mystyle.css&#39;</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>myCss<span class="token punctuation">,</span> document<span class="token punctuation">.</span>head<span class="token punctuation">.</span>childNodes<span class="token punctuation">[</span>document<span class="token punctuation">.</span>head<span class="token punctuation">.</span>childNodes<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.修改link标签</p><p>rel=&#39;preload&#39;</p><p>或者</p><p>rel=&quot;alternate stylesheet&quot;</p><h3 id="_5-压缩文件" tabindex="-1"><a class="header-anchor" href="#_5-压缩文件" aria-hidden="true">#</a> 5.压缩文件</h3><p>借助一些打包工具进行压缩，比如webpack等</p><h3 id="_6-正确使用选择器" tabindex="-1"><a class="header-anchor" href="#_6-正确使用选择器" aria-hidden="true">#</a> 6.正确使用选择器</h3><ul><li>不要嵌套过多复杂的选择器</li><li>通配符选择器尽量少用</li><li>不要为了速度而放弃了可维护性和可读性</li></ul><h3 id="_7-慎用一些css属性" tabindex="-1"><a class="header-anchor" href="#_7-慎用一些css属性" aria-hidden="true">#</a> 7.慎用一些CSS属性</h3><p>某些CSS属性需浏览器计算，是需要耗费一些性能的，比如：box-shadow、border-radius、filter、透明度、nth-child等等</p><h3 id="_8-不要使用-import" tabindex="-1"><a class="header-anchor" href="#_8-不要使用-import" aria-hidden="true">#</a> 8.不要使用@import</h3><h3 id="_9-减少页面重排、重绘" tabindex="-1"><a class="header-anchor" href="#_9-减少页面重排、重绘" aria-hidden="true">#</a> 9.减少页面重排、重绘</h3><p>非必要情况下避免以下情况：</p><ul><li>改变元素的内外边缘</li><li>CSS伪类激活</li><li>能使用background-color，就尽量不要用background；</li><li>改变font-size和font-family</li></ul><h3 id="_10-其他优化小点" tabindex="-1"><a class="header-anchor" href="#_10-其他优化小点" aria-hidden="true">#</a> 10.其他优化小点</h3><ul><li>慎重使用高性能属性：浮动、定位</li><li>去除空规则：{};</li><li>属性值为0时，不加单位。</li></ul><h3 id="提升代码质量" tabindex="-1"><a class="header-anchor" href="#提升代码质量" aria-hidden="true">#</a> 提升代码质量：</h3><ul><li>代码简写</li><li>减少选择器嵌套不超过三层</li><li>提供公共样式</li><li>减少通配符使用</li><li>巧妙运用css的继承机制</li><li>删除无用css代码</li><li>减少使用昂贵的属性</li></ul>`,30),c=[t];function l(p,r){return s(),n("div",null,c)}const d=a(i,[["render",l],["__file","20230608-css性能优化.html.vue"]]);export{d as default};

const e=JSON.parse('{"key":"v-1eae91ab","path":"/article/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.html","title":"广度优先搜索","lang":"zh-CN","frontmatter":{"title":"广度优先搜索","date":"2023-02-02T00:00:00.000Z","sidebar":"heading","breadcrumb":true,"lastUpdated":true,"contributors":true,"editLink":false,"category":"算法","tag":["搜索算法"],"description":"广度优先搜索 BFS：Breadth First Search，中文名是宽度优先搜索，也叫广度优先搜索。 是图上最基础、最重要的搜索算法之一。 尝试访问同一层的节点。如果同一层都访问完了，再访问下一层。BFS算法找到的路径是从起点开始的最短合法路径。 leetcode 102","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"广度优先搜索"}],["meta",{"property":"og:description","content":"广度优先搜索 BFS：Breadth First Search，中文名是宽度优先搜索，也叫广度优先搜索。 是图上最基础、最重要的搜索算法之一。 尝试访问同一层的节点。如果同一层都访问完了，再访问下一层。BFS算法找到的路径是从起点开始的最短合法路径。 leetcode 102"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T13:30:52.000Z"}],["meta",{"property":"article:tag","content":"搜索算法"}],["meta",{"property":"article:published_time","content":"2023-02-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T13:30:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"广度优先搜索\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-15T13:30:52.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1678887052000,"updatedTime":1678887052000,"contributors":[{"name":"zhangting","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":0.79,"words":238},"filePathRelative":"article/广度优先搜索.md","localizedDate":"2023年2月2日","excerpt":"<h1> 广度优先搜索</h1>\\n<p>BFS：Breadth First Search，中文名是宽度优先搜索，也叫广度优先搜索。</p>\\n<p>是图上最基础、最重要的搜索算法之一。</p>\\n<p>尝试访问同一层的节点。如果同一层都访问完了，再访问下一层。BFS算法找到的路径是从起点开始的最短合法路径。</p>\\n<h4> <a href=\\"https://leetcode.cn/problems/binary-tree-level-order-traversal/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">leetcode 102</a></h4>\\n","autoDesc":true}');export{e as data};

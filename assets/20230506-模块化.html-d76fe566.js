const e=JSON.parse('{"key":"v-2c004a3c","path":"/article/20230506-%E6%A8%A1%E5%9D%97%E5%8C%96.html","title":"模块化","lang":"zh-CN","frontmatter":{"title":"模块化","date":"2023-05-06T00:00:00.000Z","category":"JavaScript","tag":["模块化"],"description":"模块化 污染全局环境，命名冲突 耦合性强 不易维护 并行开发 提升效率 将复杂的程序依据一定的规则规范封装成几个文件，组合在一起，块内部的数据和实现是私有的，只向外暴露一些接口方法与外部其他模块通信。 模块化的进化史 简单封装：Namespace模式 减少了Global上的变量数目 本质是对象，一点也不安全 iife模式 立即执行函数 函数是js唯一的local scope","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/20230506-%E6%A8%A1%E5%9D%97%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"模块化"}],["meta",{"property":"og:description","content":"模块化 污染全局环境，命名冲突 耦合性强 不易维护 并行开发 提升效率 将复杂的程序依据一定的规则规范封装成几个文件，组合在一起，块内部的数据和实现是私有的，只向外暴露一些接口方法与外部其他模块通信。 模块化的进化史 简单封装：Namespace模式 减少了Global上的变量数目 本质是对象，一点也不安全 iife模式 立即执行函数 函数是js唯一的local scope"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-04T11:46:10.000Z"}],["meta",{"property":"article:tag","content":"模块化"}],["meta",{"property":"article:published_time","content":"2023-05-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-04T11:46:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-04T11:46:10.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"模块化的进化史","slug":"模块化的进化史","link":"#模块化的进化史","children":[]},{"level":2,"title":"为什么要模块化？","slug":"为什么要模块化","link":"#为什么要模块化","children":[]},{"level":2,"title":"模块化的规范","slug":"模块化的规范","link":"#模块化的规范","children":[]},{"level":2,"title":"es6","slug":"es6","link":"#es6","children":[]}],"git":{"createdTime":1683200770000,"updatedTime":1683200770000,"contributors":[{"name":"diandian","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":1.68,"words":505},"filePathRelative":"article/20230506-模块化.md","localizedDate":"2023年5月6日","excerpt":"<h1> 模块化</h1>\\n<p>污染全局环境，命名冲突  耦合性强 不易维护</p>\\n<p>并行开发 提升效率</p>\\n<p>将复杂的程序依据一定的规则规范封装成几个文件，组合在一起，块内部的数据和实现是私有的，只向外暴露一些接口方法与外部其他模块通信。</p>\\n<h2> 模块化的进化史</h2>\\n<ol>\\n<li>简单封装：Namespace模式</li>\\n</ol>\\n<p>减少了Global上的变量数目</p>\\n<p>本质是对象，一点也不安全</p>\\n<ol start=\\"2\\">\\n<li>iife模式</li>\\n</ol>\\n<p>立即执行函数</p>\\n<p>函数是js唯一的local scope</p>","autoDesc":true}');export{e as data};

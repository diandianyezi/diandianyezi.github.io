import{_ as o,W as l,X as i,Z as t,a1 as e,$ as n,a2 as a,C as s}from"./framework-609d4fec.js";const c={},d=t("p",null,"Vite是一种新型前端构建工具，能显著提升前端开发体验。主要由两部分组成：",-1),h=t("ul",null,[t("li",null,[e("一个开发服务器，基于原生ES模块提供了丰富的内建功能，速度快到惊人的"),t("code",null,"HMR"),e("。")]),t("li",null,[e("一套构建指令，使用"),t("code",null,"Rollup"),e("打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。")])],-1),p=t("h2",{id:"浏览器支持",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#浏览器支持","aria-hidden":"true"},"#"),e(" 浏览器支持")],-1),_={href:"https://caniuse.com/es6-module",target:"_blank",rel:"noopener noreferrer"},u={href:"https://caniuse.com/es6-module-dynamic-import",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/vitejs/vite/tree/main/packages/plugin-legacy",target:"_blank",rel:"noopener noreferrer"},m={href:"https://cn.vitejs.dev/guide/build.html",target:"_blank",rel:"noopener noreferrer"},f=t("h2",{id:"功能",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#功能","aria-hidden":"true"},"#"),e(" 功能")],-1),b=t("p",null,[e("对非常基础的使用来说，使用 Vite 开发和使用一个静态文件服务器并没有太大区别。然而，Vite 还通过原生 "),t("code",null,"ESM"),e(" 导入提供了许多主要用于打包场景的增强功能。")],-1),v=t("h3",{id:"npm依赖解析和预构建",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#npm依赖解析和预构建","aria-hidden":"true"},"#"),e(" Npm依赖解析和预构建")],-1),k={href:"https://cn.vitejs.dev/guide/dep-pre-bundling.html",target:"_blank",rel:"noopener noreferrer"},E={href:"http://esbuild.github.io/",target:"_blank",rel:"noopener noreferrer"},S=t("li",null,[e("重写导入为合法的 URL，例如 "),t("code",null,"/node_modules/.vite/my-dep.js?v=f3sf2ebd"),e(" 以便浏览器能够正确导入它们。")],-1),M=t("p",null,[t("strong",null,"依赖是强缓存的")],-1),V={href:"https://cn.vitejs.dev/guide/dep-pre-bundling.html#%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},j=a('<p>依赖预构建（pre-bundling）的两个目的：</p><ol><li><p><strong>CommonJS和UMD兼容性</strong>：开发阶段中，Vite的开发服务器将所有代码视为原生ES模块。因此需要必须先将作为CommonJS或UMD发布的依赖项转换为ESM。</p></li><li><p><strong>性能</strong> 将有许多内部模块的ESM依赖关系转为单个模块，以提高后续页面加载性能。</p></li></ol><blockquote><p>注意： 依赖预构建仅在开发模式下应用，并会使用**<code>esbuild</code>**将依赖转为ESM模块，生成构建中则会使用 <strong><code>@rollup/plugin-commonjs</code></strong>。 依赖预构建仅在开发模式下应用，并会使用<code>esbuild</code> 将依赖转为ESM模块，生成环境中则会使用 <code>@rollup/plugin-commonjs</code>。</p></blockquote><h3 id="自动依赖搜寻" tabindex="-1"><a class="header-anchor" href="#自动依赖搜寻" aria-hidden="true">#</a> 自动依赖搜寻</h3><p>如果没有找到相应的缓存，Vite将抓取你的源码，并自动寻找引入的依赖项，并将这些依赖项作为预构建包的入口点。预构建通过 <code>esbuild</code>执行，所以会非常快。</p><p>在服务器已经启动后，如果遇到一个新的依赖关系导入，而这个依赖关系还没有在缓存中，Vite将重新运行依赖构建进程并重新加载页面</p><h3 id="模块热重载" tabindex="-1"><a class="header-anchor" href="#模块热重载" aria-hidden="true">#</a> 模块热重载</h3>',7),x={href:"https://cn.vitejs.dev/guide/api-hmr.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/vitejs/vite/tree/main/packages/plugin-vue",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/vitejs/vite/tree/main/packages/plugin-react",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/JoviDeCroock/prefresh/tree/main/packages/vite",target:"_blank",rel:"noopener noreferrer"};function B(D,J){const r=s("ExternalLinkIcon");return l(),i("div",null,[d,h,p,t("ul",null,[t("li",null,[e("默认的构建目标浏览器是能 "),t("a",_,[e("在 script 标签上支持原生 ESM"),n(r)]),e(" 和 "),t("a",u,[e("原生 ESM 动态导入"),n(r)]),e("。传统浏览器可以通过官方插件 "),t("a",g,[e("@vitejs/plugin-legacy"),n(r)]),e(" 支持 —— 查看 "),t("a",m,[e("构建生产版本"),n(r)]),e(" 章节获取更多细节。")])]),f,b,v,t("ol",null,[t("li",null,[t("a",k,[e("预构建"),n(r)]),e(" 它们可以提高页面加载速度，并将 CommonJS / UMD 转换为 ESM 格式。预构建这一步由 "),t("a",E,[e("esbuild"),n(r)]),e(" 执行，这使得 Vite 的冷启动时间比任何基于 JavaScript 的打包器都要快得多。")]),S]),M,t("p",null,[e("Vite通过http头部来缓存请求得到的依赖，所以如果你想要编辑或调试一个依赖。请按照 "),t("a",V,[e("这里"),n(r)]),e(" 的步骤操作。")]),j,t("p",null,[e("Vite 提供了一套原生 ESM 的 "),t("a",x,[e("HMR API"),n(r)]),e("。 具有 HMR 功能的框架可以利用该 API 提供即时、准确的更新，而无需重新加载页面或清除应用程序状态。Vite 内置了 HMR 到 "),t("a",C,[e("Vue 单文件组件（SFC）"),n(r)]),e(" 和 "),t("a",R,[e("React Fast Refresh"),n(r)]),e(" 中。也通过 "),t("a",A,[e("@prefresh/vite"),n(r)]),e(" 对 Preact 实现了官方集成。")])])}const y=o(c,[["render",B],["__file","2022-10-22-vite(一).html.vue"]]);export{y as default};

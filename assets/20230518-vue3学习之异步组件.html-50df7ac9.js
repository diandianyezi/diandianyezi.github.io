const n=JSON.parse(`{"key":"v-4c464546","path":"/article/20230518-vue3%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6.html","title":"vue3学习之异步组件","lang":"zh-CN","frontmatter":{"title":"vue3学习之异步组件","date":"2023-05-18T00:00:00.000Z","category":"Vue","tag":["Vue"],"description":"异步组件 基础使用 大型应用中，我们需要拆分应用为更小的块，并仅在需要时再从服务器加载相关组件。为此，Vue提供了 defineAsyncComponent方法： import { defineAsyncComponent } from 'vue' const AsyncComp = defineAsyncComponent(() =&gt; { return new Promise((resolve, reject) =&gt; { // 从服务器获取组件 resolve(/* 获取到的组件*/) }) })","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/20230518-vue3%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"vue3学习之异步组件"}],["meta",{"property":"og:description","content":"异步组件 基础使用 大型应用中，我们需要拆分应用为更小的块，并仅在需要时再从服务器加载相关组件。为此，Vue提供了 defineAsyncComponent方法： import { defineAsyncComponent } from 'vue' const AsyncComp = defineAsyncComponent(() =&gt; { return new Promise((resolve, reject) =&gt; { // 从服务器获取组件 resolve(/* 获取到的组件*/) }) })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-26T15:36:43.000Z"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2023-05-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-26T15:36:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3学习之异步组件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-26T15:36:43.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"基础使用","slug":"基础使用","link":"#基础使用","children":[]},{"level":3,"title":"加载与错误状态","slug":"加载与错误状态","link":"#加载与错误状态","children":[]},{"level":3,"title":"搭配Suspense使用","slug":"搭配suspense使用","link":"#搭配suspense使用","children":[]}],"git":{"createdTime":1685115403000,"updatedTime":1685115403000,"contributors":[{"name":"zhangting","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"article/20230518-vue3学习之异步组件.md","localizedDate":"2023年5月18日","excerpt":"<h1> 异步组件</h1>\\n<h3> 基础使用</h3>\\n<p>大型应用中，我们需要拆分应用为更小的块，并仅在需要时再从服务器加载相关组件。为此，Vue提供了 <code>defineAsyncComponent</code>方法：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> defineAsyncComponent <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue'</span>\\n\\n<span class=\\"token keyword\\">const</span> AsyncComp <span class=\\"token operator\\">=</span> <span class=\\"token function\\">defineAsyncComponent</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Promise</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">resolve<span class=\\"token punctuation\\">,</span> reject</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 从服务器获取组件</span>\\n    <span class=\\"token function\\">resolve</span><span class=\\"token punctuation\\">(</span><span class=\\"token comment\\">/* 获取到的组件*/</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};

const e=JSON.parse('{"key":"v-4c92fe23","path":"/article/KeepAlive.html","title":"KeepAlive","lang":"zh-CN","frontmatter":{"description":"KeepAlive 内置组件，可以在动态切换多个组件时视情况缓存组件实例。 基本使用 默认情况下，一个活跃的组件实例会在切换之后被卸载，所以会丢失它已有变化的状态。 可以使用 KeepAlive组件将这些动态组件包装起来： &lt;!-- 非活跃的组件将会被缓存！ --&gt; &lt;KeepAlive&gt; &lt;component :is=\\"activeComponent\\" /&gt; &lt;/KeepAlive&gt;","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/KeepAlive.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"KeepAlive"}],["meta",{"property":"og:description","content":"KeepAlive 内置组件，可以在动态切换多个组件时视情况缓存组件实例。 基本使用 默认情况下，一个活跃的组件实例会在切换之后被卸载，所以会丢失它已有变化的状态。 可以使用 KeepAlive组件将这些动态组件包装起来： &lt;!-- 非活跃的组件将会被缓存！ --&gt; &lt;KeepAlive&gt; &lt;component :is=\\"activeComponent\\" /&gt; &lt;/KeepAlive&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T13:30:52.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-15T13:30:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"KeepAlive\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-15T13:30:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[{"level":3,"title":"包含、排除","slug":"包含、排除","link":"#包含、排除","children":[]},{"level":3,"title":"最大缓存实例数","slug":"最大缓存实例数","link":"#最大缓存实例数","children":[]},{"level":3,"title":"缓存实例的生命周期","slug":"缓存实例的生命周期","link":"#缓存实例的生命周期","children":[]}]}],"git":{"createdTime":1678887052000,"updatedTime":1678887052000,"contributors":[{"name":"zhangting","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":1.51,"words":454},"filePathRelative":"article/KeepAlive.md","localizedDate":"2023年3月15日","excerpt":"<h1> KeepAlive</h1>\\n<p>内置组件，可以在动态切换多个组件时视情况缓存组件实例。</p>\\n<h2> 基本使用</h2>\\n<p>默认情况下，一个活跃的组件实例会在切换之后被卸载，所以会丢失它已有变化的状态。</p>\\n<p>可以使用 <code>KeepAlive</code>组件将这些动态组件包装起来：</p>\\n<div class=\\"language-html line-numbers-mode\\" data-ext=\\"html\\"><pre class=\\"language-html\\"><code><span class=\\"token comment\\">&lt;!-- 非活跃的组件将会被缓存！ --&gt;</span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>KeepAlive</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>component</span> <span class=\\"token attr-name\\">:is</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>activeComponent<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>KeepAlive</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};

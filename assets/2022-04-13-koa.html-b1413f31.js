import{_ as o,W as p,X as c,Z as s,a1 as n,$ as e,a2 as t,C as r}from"./framework-609d4fec.js";const l={},i={href:"https://koa.bootcss.com/#introduction",target:"_blank",rel:"noopener noreferrer"},d=t(`<p>基于Node.js平台的下一代web开发框架</p><p>通过利用<code>async</code>函数，Koa帮你丢弃回调函数，并有力地增强错误处理。Koa并没有捆绑任何中间件，而是提供一套优雅的方法，帮你快速而愉快地编写服务端应用程序。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>Koa 依赖 <strong>node v7.6.0</strong> 或 ES2015及更高版本和 async 方法支持.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm <span class="token function">install</span> <span class="token number">7</span>
nvm <span class="token function">install</span> koa
<span class="token function">node</span> my-koa-app.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用babel实现async方法" tabindex="-1"><a class="header-anchor" href="#使用babel实现async方法" aria-hidden="true">#</a> 使用Babel实现Async方法</h2>`,6),u=s("code",null,"async",-1),k={href:"https://www.babeljs.cn/docs/usage/babel-register/",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;babel-register&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 应用的其余require需要被放到hook后面</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b={href:"https://www.babeljs.cn/docs/plugins/transform-async-to-generator/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.babeljs.cn/docs/plugins/transform-async-to-module-method/",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>例如, 在你的 <code>.babelrc</code> 文件中, 你应该有:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;transform-async-to-generator&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_={href:"https://www.babeljs.cn/docs/plugins/preset-env/",target:"_blank",rel:"noopener noreferrer"},g=s("code",null,'"node": "current"',-1),f=t(`<h2 id="应用程序" tabindex="-1"><a class="header-anchor" href="#应用程序" aria-hidden="true">#</a> 应用程序</h2><p>koa应用程序是一个包含一组中间件函数的对象，它是按照类似堆栈的方式组织和执行的。Koa类似于你可能遇到过的许多其他中间件系统。然而，一个关键的设计点是在其低级中间件层中提供高级“语法糖”。 这提高了互操作性，稳健性，并使书写中间件更加愉快。</p><p>这包块诸如内容协商，缓存清理，代理支持和重定向等常见任务的方法。</p><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">ctx</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function y(w,j){const a=r("ExternalLinkIcon");return p(),c("div",null,[s("p",null,[s("a",i,[n("官网"),e(a)])]),d,s("p",null,[n("要在 node < 7.6 版本的 Koa 中使用 "),u,n(" 方法, 我们推荐使用 "),s("a",k,[n("babel's require hook"),e(a)]),n(".")]),v,s("p",null,[n("要解析和编译 async 方法, 你至少应该有 "),s("a",b,[n("transform-async-to-generator"),e(a)]),n(" 或 "),s("a",m,[n("transform-async-to-module-method"),e(a)]),n(" 插件.")]),h,s("p",null,[n("你也可以用 "),s("a",_,[n("env preset"),e(a)]),n(" 的 target 参数 "),g,n(" 替代.")]),f])}const q=o(l,[["render",y],["__file","2022-04-13-koa.html.vue"]]);export{q as default};

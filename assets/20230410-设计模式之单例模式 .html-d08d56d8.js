const e=JSON.parse('{"key":"v-221e8dad","path":"/article/20230410-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%20.html","title":"常见设计模式","lang":"zh-CN","frontmatter":{"title":"常见设计模式","date":"2023-04-10T00:00:00.000Z","description":"常见设计模式 设计模式：是一套被反复使用、思想成熟、经过分类和无数实战设计经验的总结的。使用设计模式是为了让系统代码可重用、可扩展、可解耦、更容易被人理解且能保证代码可靠性。 设计模式分为三大类 创建型：工厂模式、抽象工厂模式、建造者模式、单例模式、原型模式。 结构型：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式。 行为型：策略模式、模板方法模式、发布订阅方式、迭代器模式、职责链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/20230410-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%20.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"常见设计模式"}],["meta",{"property":"og:description","content":"常见设计模式 设计模式：是一套被反复使用、思想成熟、经过分类和无数实战设计经验的总结的。使用设计模式是为了让系统代码可重用、可扩展、可解耦、更容易被人理解且能保证代码可靠性。 设计模式分为三大类 创建型：工厂模式、抽象工厂模式、建造者模式、单例模式、原型模式。 结构型：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式。 行为型：策略模式、模板方法模式、发布订阅方式、迭代器模式、职责链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-28T09:59:05.000Z"}],["meta",{"property":"article:published_time","content":"2023-04-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-28T09:59:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见设计模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-28T09:59:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[{"level":3,"title":"什么是单例模式？","slug":"什么是单例模式","link":"#什么是单例模式","children":[]},{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":3,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]}]}],"git":{"createdTime":1682675945000,"updatedTime":1682675945000,"contributors":[{"name":"diandian","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":2.89,"words":868},"filePathRelative":"article/20230410-设计模式之单例模式 .md","localizedDate":"2023年4月10日","excerpt":"<h1> 常见设计模式</h1>\\n<p>设计模式：<strong>是一套被反复使用、思想成熟、经过分类和无数实战设计经验的总结的</strong>。使用设计模式是为了让系统代码可重用、可扩展、可解耦、更容易被人理解且能保证代码可靠性。</p>\\n<p>设计模式分为三大类</p>\\n<ul>\\n<li>创建型：工厂模式、抽象工厂模式、建造者模式、单例模式、原型模式。</li>\\n<li>结构型：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式。</li>\\n<li>行为型：策略模式、模板方法模式、发布订阅方式、迭代器模式、职责链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</li>\\n</ul>","autoDesc":true}');export{e as data};

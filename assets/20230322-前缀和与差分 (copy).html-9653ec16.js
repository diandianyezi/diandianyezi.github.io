const n=JSON.parse('{"key":"v-ca6ece38","path":"/article/20230322-%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86%20(copy).html","title":"前缀和与差分","lang":"zh-CN","frontmatter":{"description":"前缀和与差分 前缀和 是一种重要的预处理，能大大降低查询的时间复杂度。可以简单理解为“数列的前n项和” 例题 有N个正整数放到数组A里，现在要求一个新的数组B，新数组的第i个数B[i] 是原数组A第0到第i个数的和。 function getB(nums) { var res = [] nums.reduce((pre,cur) =&gt; { res.push(pre + cur) }, 0) return res }","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/20230322-%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86%20(copy).html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"前缀和与差分"}],["meta",{"property":"og:description","content":"前缀和与差分 前缀和 是一种重要的预处理，能大大降低查询的时间复杂度。可以简单理解为“数列的前n项和” 例题 有N个正整数放到数组A里，现在要求一个新的数组B，新数组的第i个数B[i] 是原数组A第0到第i个数的和。 function getB(nums) { var res = [] nums.reduce((pre,cur) =&gt; { res.push(pre + cur) }, 0) return res }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-05T12:33:06.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-05T12:33:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前缀和与差分\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-05T12:33:06.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前缀和","slug":"前缀和","link":"#前缀和","children":[{"level":3,"title":"例题","slug":"例题","link":"#例题","children":[]},{"level":3,"title":"二维/多维前缀和","slug":"二维-多维前缀和","link":"#二维-多维前缀和","children":[]}]},{"level":2,"title":"差分","slug":"差分","link":"#差分","children":[]}],"git":{"createdTime":1680098674000,"updatedTime":1680697986000,"contributors":[{"name":"zhangting","email":"1092923594@qq.com","commits":2}]},"readingTime":{"minutes":0.69,"words":208},"filePathRelative":"article/20230322-前缀和与差分 (copy).md","localizedDate":"2023年3月29日","excerpt":"<h1> 前缀和与差分</h1>\\n<h2> 前缀和</h2>\\n<p>是一种重要的预处理，能大大降低查询的时间复杂度。可以简单理解为“数列的前n项和”</p>\\n<h3> 例题</h3>\\n<p>有N个正整数放到数组A里，现在要求一个新的数组B，新数组的第i个数B[i] 是原数组A第0到第i个数的和。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getB</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">nums</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">var</span> res <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n  nums<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reduce</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">pre<span class=\\"token punctuation\\">,</span>cur</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>pre <span class=\\"token operator\\">+</span> cur<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n  \\n  <span class=\\"token keyword\\">return</span> res\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};

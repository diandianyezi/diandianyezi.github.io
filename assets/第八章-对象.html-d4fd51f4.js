const e=JSON.parse('{"key":"v-a25d142a","path":"/article/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E5%AF%B9%E8%B1%A1.html","title":"对象、类与面向对象编程","lang":"zh-CN","frontmatter":{"title":"对象、类与面向对象编程","date":"2022-11-04T00:00:00.000Z","sidebar":"heading","breadcrumb":true,"lastUpdated":true,"contributors":true,"editLink":false,"category":"JavaScript","tag":["类","对象"],"description":"对象、类与面向对象编程 理解对象 属性的类型 ECMA-262使用一些内部特性来描述属性的特征。这些特征是由为JavaScript实现引擎的规范定义的。 属性分为两种：数据属性和访问器属性 数据属性 数据属性包含一个保存数据值的位置。 四个特性描述： Configurable：表示属性是否可以通过delete删除并重新定义，是否可以修改它的特性，以及是否可以把它改为访问器属性。默认所有直接定义在对象上的属性为true Enumerable：表示属性是否可以通过for-in循环返回。默认所有直接定义在对象上的属性为true Writable：表示属性是否可以被修改。默认所有直接定义在对象上的属性为true Value：包含属性实际的值。这就是前面提到的那个读取和写入属性值的位置。默认值所有直接定义在对象上的属性为undefined","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/%E7%AC%AC%E5%85%AB%E7%AB%A0-%E5%AF%B9%E8%B1%A1.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"对象、类与面向对象编程"}],["meta",{"property":"og:description","content":"对象、类与面向对象编程 理解对象 属性的类型 ECMA-262使用一些内部特性来描述属性的特征。这些特征是由为JavaScript实现引擎的规范定义的。 属性分为两种：数据属性和访问器属性 数据属性 数据属性包含一个保存数据值的位置。 四个特性描述： Configurable：表示属性是否可以通过delete删除并重新定义，是否可以修改它的特性，以及是否可以把它改为访问器属性。默认所有直接定义在对象上的属性为true Enumerable：表示属性是否可以通过for-in循环返回。默认所有直接定义在对象上的属性为true Writable：表示属性是否可以被修改。默认所有直接定义在对象上的属性为true Value：包含属性实际的值。这就是前面提到的那个读取和写入属性值的位置。默认值所有直接定义在对象上的属性为undefined"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-21T07:45:14.000Z"}],["meta",{"property":"article:tag","content":"类"}],["meta",{"property":"article:tag","content":"对象"}],["meta",{"property":"article:published_time","content":"2022-11-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-21T07:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对象、类与面向对象编程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-04T00:00:00.000Z\\",\\"dateModified\\":\\"2022-11-21T07:45:14.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"理解对象","slug":"理解对象","link":"#理解对象","children":[{"level":3,"title":"属性的类型","slug":"属性的类型","link":"#属性的类型","children":[]},{"level":3,"title":"定义多个属性","slug":"定义多个属性","link":"#定义多个属性","children":[]},{"level":3,"title":"读取属性的特性","slug":"读取属性的特性","link":"#读取属性的特性","children":[]},{"level":3,"title":"合并对象","slug":"合并对象","link":"#合并对象","children":[]},{"level":3,"title":"对象标识及相等判定","slug":"对象标识及相等判定","link":"#对象标识及相等判定","children":[]},{"level":3,"title":"增强的对象语法","slug":"增强的对象语法","link":"#增强的对象语法","children":[]}]},{"level":2,"title":"创建对象","slug":"创建对象","link":"#创建对象","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[]},{"level":3,"title":"构造函数模式","slug":"构造函数模式","link":"#构造函数模式","children":[]}]},{"level":2,"title":"继承","slug":"继承","link":"#继承","children":[{"level":3,"title":"原型链","slug":"原型链-1","link":"#原型链-1","children":[]},{"level":3,"title":"盗用构造函数","slug":"盗用构造函数","link":"#盗用构造函数","children":[]},{"level":3,"title":"组合继承","slug":"组合继承","link":"#组合继承","children":[]},{"level":3,"title":"原型式继承","slug":"原型式继承","link":"#原型式继承","children":[]},{"level":3,"title":"寄生式继承","slug":"寄生式继承","link":"#寄生式继承","children":[]},{"level":3,"title":"寄生式组合继承","slug":"寄生式组合继承","link":"#寄生式组合继承","children":[]}]}],"git":{"createdTime":1669016714000,"updatedTime":1669016714000,"contributors":[{"name":"zhangting","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":19.21,"words":5762},"filePathRelative":"article/第八章-对象.md","localizedDate":"2022年11月4日","excerpt":"<h1> 对象、类与面向对象编程</h1>\\n<h2> 理解对象</h2>\\n<h3> 属性的类型</h3>\\n<p>ECMA-262使用一些内部特性来描述属性的特征。这些特征是由为JavaScript实现引擎的规范定义的。</p>\\n<p>属性分为两种：数据属性和访问器属性</p>\\n<h4> 数据属性</h4>\\n<p>数据属性包含一个保存数据值的位置。</p>\\n<h5> 四个特性描述：</h5>\\n<ul>\\n<li><code>Configurable</code>：表示属性<strong>是否可以通过delete删除并重新定义</strong>，<strong>是否可以修改它的特性</strong>，以及<strong>是否可以把它改为访问器属性</strong>。默认所有直接定义在对象上的属性为<code>true</code></li>\\n<li><code>Enumerable</code>：<strong>表示属性是否可以通过for-in循环返回</strong>。默认所有直接定义在对象上的属性为<code>true</code></li>\\n<li><code>Writable</code>：表示属性是否可以被修改。默认所有直接定义在对象上的属性为<code>true</code></li>\\n<li><code>Value</code>：包含属性实际的值。这就是前面提到的那个读取和写入属性值的位置。默认值所有直接定义在对象上的属性为<code>undefined</code></li>\\n</ul>","autoDesc":true}');export{e as data};

import{_ as n,W as a,X as t,a2 as r}from"./framework-609d4fec.js";const e={},p=r('<h1 id="算法" tabindex="-1"><a class="header-anchor" href="#算法" aria-hidden="true">#</a> 算法</h1><p>计算= 信息处理</p><p>借助某种工具，遵照一定规则，以明确而机械的形式进行</p><p>计算模型= 计算机=信息处理工具</p><p><strong>算法：即特定计算模型下，旨在解决特定问题的指令序列</strong></p><p><strong>算法具备的要素：</strong></p><p>​ <strong>输入</strong>：待处理的信息</p><p>​ <strong>输出</strong>：经处理的信息</p><p>​ <strong>正确性</strong>：的确可以解决指定的问题</p><p>​ <strong>确定性</strong>： 任一算法都可以描述为一个由基本操作组成的序列</p><p>​ <strong>可行性</strong>：每一基本操作都可实现，且在常数时间内完成</p><p>​ <strong>有穷性</strong>：对于任何输入，经有穷次基本操作，都可以得到输出</p><p>程序未必是算法，可能满足不了一些要素</p><h2 id="好算法" tabindex="-1"><a class="header-anchor" href="#好算法" aria-hidden="true">#</a> 好算法</h2><p>正确：</p><p>健壮：</p><p>可读：</p><p>效率：</p><h2 id="算法复杂度度量" tabindex="-1"><a class="header-anchor" href="#算法复杂度度量" aria-hidden="true">#</a> 算法复杂度度量</h2><h3 id="算法分析" tabindex="-1"><a class="header-anchor" href="#算法分析" aria-hidden="true">#</a> 算法分析</h3><p>两个方面：正确性 和 成本**（运行时间和存储空间）**</p><h3 id="大o记号-big-o-notation" tabindex="-1"><a class="header-anchor" href="#大o记号-big-o-notation" aria-hidden="true">#</a> 大O记号 (big-O notation)</h3><p>渐进分析：随着问题规模增加，计算成本如何增长？</p><p>其他几号：</p><p>Ω： 最好情况的时间复杂度</p><p>θ：T(n) = θ(F(n)):</p><p>存在c1 &gt; c2 &gt; 0时，当n &gt;&gt; 2后，有c1 f(n) &gt; T(n) &gt; c2 f(n);</p><h3 id="时间复杂度" tabindex="-1"><a class="header-anchor" href="#时间复杂度" aria-hidden="true">#</a> 时间复杂度</h3><p>O(1)</p><p>O(logn)，复杂度无限接近于常数</p><p>O(nc) n的c次方</p><p>O(2n) 2的n次方： 指数</p>',32),o=[p];function s(h,i){return a(),t("div",null,o)}const c=n(e,[["render",s],["__file","复杂度.html.vue"]]);export{c as default};

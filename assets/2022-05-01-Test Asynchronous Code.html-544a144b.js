const t=JSON.parse(`{"key":"v-62b8c2a1","path":"/article/2022-05-01-Test%20Asynchronous%20Code.html","title":"Test Asynchronous","lang":"zh-CN","frontmatter":{"title":"Test Asynchronous","date":"2022-05-01T00:00:00.000Z","sidebar":"heading","breadcrumb":true,"lastUpdated":true,"contributors":true,"editLink":false,"category":["测试"],"tag":["Jest","Promise"],"description":"Promises Return a promise from your test, and Jest will wait for that promise to resolve. If the promise is rejected, the test will fail. test('the data is peanut butter', () =&gt; { return fetchData().then(data =&gt; { expect(data).toBe('peanut butter'); }); });","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/2022-05-01-Test%20Asynchronous%20Code.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"Test Asynchronous"}],["meta",{"property":"og:description","content":"Promises Return a promise from your test, and Jest will wait for that promise to resolve. If the promise is rejected, the test will fail. test('the data is peanut butter', () =&gt; { return fetchData().then(data =&gt; { expect(data).toBe('peanut butter'); }); });"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-28T02:52:07.000Z"}],["meta",{"property":"article:tag","content":"Jest"}],["meta",{"property":"article:tag","content":"Promise"}],["meta",{"property":"article:published_time","content":"2022-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-07-28T02:52:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Test Asynchronous\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-01T00:00:00.000Z\\",\\"dateModified\\":\\"2022-07-28T02:52:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"Promises","slug":"promises","link":"#promises","children":[]},{"level":3,"title":"Async/Await","slug":"async-await","link":"#async-await","children":[]}],"git":{"createdTime":1658318463000,"updatedTime":1658976727000,"contributors":[{"name":"zhangting5","email":"zhangting5@xiaomi.xom","commits":2}]},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"article/2022-05-01-Test Asynchronous Code.md","localizedDate":"2022年5月1日","excerpt":"<h3> Promises</h3>\\n<p>Return a promise from your test, and Jest will wait for that promise to resolve. If the promise is rejected, the test will fail.</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token function\\">test</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'the data is peanut butter'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">fetchData</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">data</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">expect</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toBe</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'peanut butter'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};

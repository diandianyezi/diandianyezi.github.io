const e=JSON.parse('{"key":"v-a11bddce","path":"/article/20230712-js%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B.html","title":"js数据类型","lang":"zh-CN","frontmatter":{"title":"js数据类型","date":"2023-07-12T00:00:00.000Z","description":"js数据类型 js是一种弱类型语言或者动态语言。不用提前声明变量类型，在程序运行过程中，类型会被自动确定。 ECMAScript标准定义了原始数据类型和引用数据类型，共七种内置的数据类型： 原始数据类型（基本类型）：按值访问，可以操作保存在变量种实际的值。 空值 null 未定义 undefined 布尔值 boolean 数字 number 字符串 string 符号 symbol 引用类型（复杂数据类型）：引用类型的值是保存在内存中的对象。 对象 Object 布尔对象 Boolean 数字对象 Number 字符串对象 String 函数对象 Function 数组对象 Array 日期对象 Date 正则对象 RegExp 错误对象 Error","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.netlify.app/article/20230712-js%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Yezi’s Blog"}],["meta",{"property":"og:title","content":"js数据类型"}],["meta",{"property":"og:description","content":"js数据类型 js是一种弱类型语言或者动态语言。不用提前声明变量类型，在程序运行过程中，类型会被自动确定。 ECMAScript标准定义了原始数据类型和引用数据类型，共七种内置的数据类型： 原始数据类型（基本类型）：按值访问，可以操作保存在变量种实际的值。 空值 null 未定义 undefined 布尔值 boolean 数字 number 字符串 string 符号 symbol 引用类型（复杂数据类型）：引用类型的值是保存在内存中的对象。 对象 Object 布尔对象 Boolean 数字对象 Number 字符串对象 String 函数对象 Function 数组对象 Array 日期对象 Date 正则对象 RegExp 错误对象 Error"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-12T14:06:30.000Z"}],["meta",{"property":"article:published_time","content":"2023-07-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-12T14:06:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"js数据类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-12T14:06:30.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"原始数据类型","slug":"原始数据类型","link":"#原始数据类型","children":[{"level":3,"title":"空值","slug":"空值","link":"#空值","children":[]},{"level":3,"title":"未定义值","slug":"未定义值","link":"#未定义值","children":[]},{"level":3,"title":"布尔值","slug":"布尔值","link":"#布尔值","children":[]},{"level":3,"title":"数字","slug":"数字","link":"#数字","children":[]},{"level":3,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":3,"title":"符号","slug":"符号","link":"#符号","children":[]}]},{"level":2,"title":"引用数据类型","slug":"引用数据类型","link":"#引用数据类型","children":[]},{"level":2,"title":"类型检测","slug":"类型检测","link":"#类型检测","children":[{"level":3,"title":"typeof","slug":"typeof","link":"#typeof","children":[]},{"level":3,"title":"instanceof","slug":"instanceof","link":"#instanceof","children":[]},{"level":3,"title":"Object.prototype.toString","slug":"object-prototype-tostring","link":"#object-prototype-tostring","children":[]},{"level":3,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":3,"title":"数组检测","slug":"数组检测","link":"#数组检测","children":[]}]},{"level":2,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[{"level":3,"title":"基本规则","slug":"基本规则","link":"#基本规则","children":[]}]}],"git":{"createdTime":1689154743000,"updatedTime":1689170790000,"contributors":[{"name":"diandian","email":"1092923594@qq.com","commits":2},{"name":"zhangting","email":"1092923594@qq.com","commits":1}]},"readingTime":{"minutes":7.24,"words":2172},"filePathRelative":"article/20230712-js基础类型.md","localizedDate":"2023年7月12日","excerpt":"<h1> js数据类型</h1>\\n<ul>\\n<li>js是一种弱类型语言或者动态语言。不用提前声明变量类型，在程序运行过程中，类型会被自动确定。</li>\\n</ul>\\n<p>ECMAScript标准定义了原始数据类型和引用数据类型，共七种内置的数据类型：</p>\\n<ul>\\n<li>原始数据类型（基本类型）：按值访问，可以操作保存在变量种实际的值。\\n<ul>\\n<li>空值 null</li>\\n<li>未定义 undefined</li>\\n<li>布尔值 boolean</li>\\n<li>数字 number</li>\\n<li>字符串 string</li>\\n<li>符号  symbol</li>\\n</ul>\\n</li>\\n<li>引用类型（复杂数据类型）：引用类型的值是保存在内存中的对象。\\n<ul>\\n<li>对象 Object\\n<ul>\\n<li>布尔对象 Boolean</li>\\n<li>数字对象 Number</li>\\n<li>字符串对象 String</li>\\n<li>函数对象 Function</li>\\n<li>数组对象 Array</li>\\n<li>日期对象 Date</li>\\n<li>正则对象 RegExp</li>\\n<li>错误对象 Error</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};

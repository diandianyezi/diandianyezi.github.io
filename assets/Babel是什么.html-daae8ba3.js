import{_ as p,W as o,X as c,Z as n,a1 as a,$ as e,a2 as t,C as l}from"./framework-609d4fec.js";const r={},i={href:"https://www.babeljs.cn/docs/index.html",target:"_blank",rel:"noopener noreferrer"},u=t(`<h2 id="babel-是什么" tabindex="-1"><a class="header-anchor" href="#babel-是什么" aria-hidden="true">#</a> Babel 是什么？</h2><p>是一个JavaScript编译器</p><p>作为一个工具链，主要用于将采用ECMAScript 2015+语法编写的代码转换为向后兼容的Javascript语法，以便能够运行在当前和旧版本的浏览器和其他环境中。</p><p>主要有以下功能：</p><ul><li>语法转换</li><li>通过<code>Polyfill</code>方式在目标环境中添加缺失的特性（通过引入第三方<code>polyfill</code>模块，例如<code>core-js</code>）</li><li>源码转换(codemodes)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Babel 输入： ES2015 箭头函数</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Babel 输出： ES5 语法实现的同等功能</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),d={href:"https://github.com/jamiebuilds/the-super-tiny-compiler",target:"_blank",rel:"noopener noreferrer"},k=n("h3",{id:"es2015及更新版本",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#es2015及更新版本","aria-hidden":"true"},"#"),a(" ES2015及更新版本")],-1),b=n("p",null,"Babel 通过语法转换器来支持新版本的JS语法。",-1),h={href:"https://www.babeljs.cn/docs/plugins",target:"_blank",rel:"noopener noreferrer"},m=n("h3",{id:"jsx与react",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#jsx与react","aria-hidden":"true"},"#"),a(" JSX与React")],-1),v={href:"https://www.babeljs.cn/docs/babel-preset-react",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/babel/babel-sublime",target:"_blank",rel:"noopener noreferrer"},f=n("h3",{id:"类型注释-flow-和-typescript",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#类型注释-flow-和-typescript","aria-hidden":"true"},"#"),a(" 类型注释(Flow 和 TypeScript)")],-1),g=n("p",null,"Babel可以删除类型注释！Babel是不做类型检查的，所以仍需要安装 Flow 或 TypeScript来执行类型检查的工作。",-1),w=n("h5",{id:"插件化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插件化","aria-hidden":"true"},"#"),a(" 插件化")],-1),x={href:"https://www.babeljs.cn/docs/plugins#presets",target:"_blank",rel:"noopener noreferrer"},y={href:"https://astexplorer.net/#/KJ8AjD6maa",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/babel/generator-babel-plugin",target:"_blank",rel:"noopener noreferrer"},S=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 一个插件就是一个函数</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">types</span><span class="token operator">:</span> t <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">visitor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">Identifier</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> name <span class="token operator">=</span> path<span class="token punctuation">.</span>node<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// 反转字符串： JavaScript -&gt; tpircSavaJ</span>
        path<span class="token punctuation">.</span>node<span class="token punctuation">.</span>name <span class="token operator">=</span> name
          <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="可调式" tabindex="-1"><a class="header-anchor" href="#可调式" aria-hidden="true">#</a> 可调式</h3><p>支持Source Map</p><h3 id="符合规范" tabindex="-1"><a class="header-anchor" href="#符合规范" aria-hidden="true">#</a> 符合规范</h3><h3 id="代码紧凑" tabindex="-1"><a class="header-anchor" href="#代码紧凑" aria-hidden="true">#</a> 代码紧凑</h3>`,5);function B(J,E){const s=l("ExternalLinkIcon");return o(),c("div",null,[n("p",null,[n("a",i,[a("官网"),e(s)])]),u,n("p",null,[a("编译器可参考"),n("a",d,[a("the-super-tiny-compiler项目"),e(s)])]),k,b,n("p",null,[a("这些"),n("a",h,[a("插件"),e(s)])]),m,n("p",null,[a("Babel 能够转换 JSX 语法！查看 "),n("a",v,[a("React preset"),e(s)]),a(" 了解更多信息。通过和 "),n("a",_,[a("babel-sublime"),e(s)]),a(" 一起使用还可以把语法高亮的功能提升到一个新的水平。")]),f,g,w,n("p",null,[a("Babel构建在插件之上。使用现有的或自己编写的插件可以组成一个转换管道。通过使用或创建一个 "),n("a",x,[a("preset"),e(s)]),a(" 即可轻松使用一组插件。")]),n("p",null,[a("利用 "),n("a",y,[a("astexplorer.net"),e(s)]),a(" 可以立即创建一个插件，或者使用 "),n("a",j,[a("generator-babel-plugin"),e(s)]),a(" 生成一个插件模板。")]),S])}const N=p(r,[["render",B],["__file","Babel是什么.html.vue"]]);export{N as default};

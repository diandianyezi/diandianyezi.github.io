import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.c47ce94b.js";const t={},e=p(`<ol><li><p>\u4F7F\u7528 <code>Object.hasOwn</code> \u66FF\u4EE3 <code>in</code> \u64CD\u4F5C\u7B26</p><p>\u68C0\u6D4B\u5BF9\u8C61\u4E0A\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5C5E\u6027\uFF0C\u4E00\u822C\u4F1A\u4F7F\u7528<code>in</code>\u64CD\u4F5C\u7B26\u6216<code>obj.hasOwnProperty</code>\uFF0C\u4F46\u6709\u5404\u81EA\u7684\u7F3A\u9677</p></li></ol><h4 id="in" tabindex="-1"><a class="header-anchor" href="#in" aria-hidden="true">#</a> in</h4><pre><code>\u5982\u679C\u6307\u5B9A\u7684\u5C5E\u6027\u4F4D\u4E8E\u5BF9\u8C61\u6216\u8005\u539F\u578B\u94FE\u4E2D\uFF0C\u4F1A\u8FD4\u56DE\`true\`

\`\`\`js
const Person = function (age) {
  this.age = age
}
Person.prototype.name = &#39;fatfish&#39;

const p1 = new Person(24)
console.log(&#39;age&#39; in p1) // true 
console.log(&#39;name&#39; in p1) // true  \u6CE8\u610F\u8FD9\u91CC
\`\`\`
</code></pre><h4 id="obj-hasownproperty" tabindex="-1"><a class="header-anchor" href="#obj-hasownproperty" aria-hidden="true">#</a> Obj.hasOwnProperty</h4><p>\u5224\u65AD\u5BF9\u8C61\u81EA\u8EAB\u5C5E\u6027\u4E2D\u662F\u5426\u5177\u6709\u5BF9\u5E94\u7684\u503C\uFF0C\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027\u4E0D\u4F1A\u8BFB\u53D6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> <span class="token function-variable function">Person</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
    <span class="token punctuation">}</span>
    
    <span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;new name&#39;</span>
    <span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true </span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// fasle  \u6CE8\u610F\u8FD9\u91CC</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u4E0D\u5B89\u5168</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="object-hasown" tabindex="-1"><a class="header-anchor" href="#object-hasown" aria-hidden="true">#</a> Object.hasOwn</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">let</span> object <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span>
    Object<span class="token punctuation">.</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    <span class="token keyword">let</span> object2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    Object<span class="token punctuation">.</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>object2<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false  </span>
    <span class="token keyword">let</span> object3 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    Object<span class="token punctuation">.</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>object3<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>\u4F7F\u7528#\u58F0\u660E\u79C1\u6709\u5C5E\u6027</p><p>\u4F7F\u7528_\u8868\u793A\u79C1\u6709\u5C5E\u6027\uFF0C\u5E76\u4E0D\u9760\u8C31\u3002\u8FD8\u662F\u4F1A\u88AB\u5916\u90E8\u4FEE\u6539</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
      #money<span class="token operator">=</span><span class="token number">1</span>
      <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
      <span class="token punctuation">}</span>
      <span class="token keyword">get</span> <span class="token function">money</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#money
      <span class="token punctuation">}</span>
      <span class="token keyword">set</span> <span class="token function">money</span> <span class="token punctuation">(</span><span class="token parameter">money</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>#money <span class="token operator">=</span> money
      <span class="token punctuation">}</span>
      <span class="token function">showMoney</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#money<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;fatfish&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>money<span class="token punctuation">)</span> <span class="token comment">// 1</span>
    <span class="token comment">// p1.#money = 2 // \u6CA1\u6CD5\u4ECE\u5916\u90E8\u76F4\u63A5\u4FEE\u6539</span>
    p1<span class="token punctuation">.</span>money <span class="token operator">=</span> <span class="token number">2</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>money<span class="token punctuation">)</span> <span class="token comment">// 2</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>#money<span class="token punctuation">)</span> <span class="token comment">// Uncaught SyntaxError: Private field &#39;#money&#39; must be declared in an enclosing class</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u8D85\u6709\u7528\u7684\u201C\u6570\u5B57\u5206\u9694\u7B26\u201D</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> sixBillion <span class="token operator">=</span> <span class="token number">6000000000</span>
    <span class="token comment">// \u274C \u96BE\u4EE5\u9605\u8BFB</span>
    <span class="token keyword">const</span> sixBillion2 <span class="token operator">=</span> <span class="token number">6000_000_000</span>
    <span class="token comment">// \u2705 \u66F4\u52A0\u6613\u4E8E\u9605\u8BFB</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sixBillion2<span class="token punctuation">)</span> <span class="token comment">// 6000000000</span>
    <span class="token keyword">const</span> sum <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">+</span> <span class="token number">6000_000_000</span> <span class="token comment">// 6000001000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><p><code>?.</code>\u66FF\u4EE3&amp;&amp; \u548C\u4E09\u76EE\u8FD0\u7B97\u7B26</p><blockquote><p><strong>?.</strong> \u7684\u4E00\u822C\u7528\u6CD5</p><ol><li>obj?.prop \u5BF9\u8C61\u5C5E\u6027</li><li>obj?.[expr] \u5BF9\u8C61\u5C5E\u6027</li><li>func?.(...args) \u6267\u884C\u51FD\u6570</li></ol></blockquote></li><li><p>\u4F7F\u7528<code>BigInt</code>\u652F\u6301\u5927\u6570\u8FD0\u7B97</p><p>JS\u4E2D\u8D85\u8FC7<code>Number.MAX_SAFE_INTEGER</code>\u7684\u6570\u5B57\u8BA1\u7B97\u5C06\u662F\u4E0D\u5B89\u5168\u7684\u3002</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">===</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token comment">// true</span>
  <span class="token comment">// Math.pow(2, 53) =&gt; 9007199254740992</span>
  <span class="token comment">// Math.pow(2, 53) + 1 =&gt; 9007199254740992</span>
  
  <span class="token function">BigInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">BigInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","2022-05-06-5\u4E2Ajs\u7279\u6027.html.vue"]]);export{k as default};
